plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + '+' + project.mod_minecraft_version + getExtraBuildMetadata()
group = project.maven_group

repositories {
	maven {
		name 'TerraformersMC'
		url 'https://maven.terraformersmc.com'
	}
	maven {
		name 'Modrinth'
		url 'https://api.modrinth.com/maven'
	}
	maven {
		url 'https://maven.vram.io'
	}
	maven {
		name 'Shedaniel'
		url 'https://maven.shedaniel.me'
	}
	maven {
		url 'https://server.bbkr.space/artifactory/libs-release'
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation('com.terraformersmc:modmenu:3.2.2') {
		exclude group: 'net.fabricmc.fabric-api'
	}

	modCompileOnly 'maven.modrinth:sodium:mc1.18.2-0.4.1'
	modCompileOnly 'io.vram:canvas-fabric-mc118:1.0.2308'
	modCompileOnly 'maven.modrinth:indium:1.0.3+mc1.18.2'
}

String getExtraBuildMetadata() {
	String buildNumber = System.getenv('GITHUB_RUN_NUMBER')
	if (buildNumber != null) {
		return "-build.${buildNumber}"
	}
	return ''
}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release.set(17)
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from('LICENSE') {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
